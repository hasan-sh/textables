{"version":3,"file":"static/webpack/static/development/pages/index.js.1052c666f7b022effd97.hot-update.js","sources":["webpack:///./components/Textables.js"],"sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport styles from '../style.scss'\nimport fetch from 'isomorphic-fetch'\n\nconst API =\n  'https://raw.githubusercontent.com/MohawkApps/Textables/master/resources/content.json'\n\nclass Textables extends React.Component {\n  state = {\n    faces: [],\n    searchedFaces: [],\n    search: '',\n    copied: false\n  }\n  componentDidMount = async () => {\n    let options = {\n      method: 'GET',\n      mode: 'cors',\n      header: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }\n    const req = await fetch(API, options)\n    const res = await req.json()\n    const faces = res.reduce((acc, curr) => {\n      const { items } = curr\n      acc.push(...items)\n      return acc\n    }, [])\n    this.setState({ faces, searchedFaces: faces.slice() })\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    if (nextState.copied) {\n      this.timer = setTimeout(() => {\n        this.setState({ copied: false })\n      }, 2000)\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer)\n  }\n\n  onCopy = () => {\n    this.setState({ copied: true })\n  }\n\n  search = search => {\n    const faces = this.state.faces.slice()\n\n    const searchedFaces = faces.filter(face => {\n      const name = face.name.toLowerCase()\n      const searchTerm = new RegExp(search.trim().toLowerCase(), 'ig')\n\n      const matched = name.match(searchTerm)\n\n      if (matched) {\n        const parsedName = face.name.replace(\n          searchTerm,\n          `<span class=\"${styles.test}\">${search.trim()}</span>`\n        )\n        face.parsedName = parsedName\n        return true\n      }\n    })\n\n    this.setState({ search, searchedFaces })\n  }\n\n  render() {\n    if (this.state.faces.length < 1) return <div>Loading...</div>\n\n    const faces = this.state.searchedFaces.map((item, i) => (\n      <Item key={i} item={item} onCopy={this.onCopy} />\n    ))\n\n    return (\n      <React.Fragment>\n        {this.state.copied ? (\n          <span className={styles.copied}>Copied!</span>\n        ) : null}\n        <div\n          style={{\n            fontSize: '2em'\n          }}\n        >\n          Click on a Face to copy it ( ¬‿¬)\n        </div>\n        <input\n          type=\"search\"\n          placeholder=\"Find a ಠ‿ಠ by name..\"\n          className={styles.input}\n          onChange={e => this.search(e.target.value)}\n          value={this.state.search}\n        />\n        <div className={styles.textablesContainer}>{faces}</div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Textables\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AADA;AAAA;AACA;AADA;AASA;AATA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AA7BA;AACA;AACA;;;AA4BA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA7FA;AACA;AA+FA;;;;A","sourceRoot":""}